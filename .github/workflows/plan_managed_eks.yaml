name: "Terraform Plan Managed EKS"

on:
  workflow_dispatch:
    inputs:
      name_prefix:
        type: string
        description: Prefix used for resource names
        default: argocdmanagedstarter
      create_baseapp:
        type: boolean
        description: Set to true to create an ArgoCD app. This should be used as a base app in an app of apps pattern
        default: false
      app_repository_url:
        type: string
        description: URL for app repository
        required: false
      app_repository_branch:
        type: string
        description: Branch for app repository
        required: false
      app_repository_path:
        type: string
        description: Path for app repository
        required: false

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: managed-eks-terraform
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        id: setup1
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "~1.8.0"
          terraform_wrapper: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/KubernetesStarterGitHubOIDC
          role-session-name: github-deploy
          aws-region: us-east-1

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=$STATE_BUCKET_NAME" -backend-config="key=$STATE_BUCKET_KEY"
        env:
          STATE_BUCKET_NAME: ${{ secrets.STATE_BUCKET_NAME }}
          STATE_BUCKET_KEY: ${{ secrets.STATE_BUCKET_APPLICATION_KEY }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -var 'name_prefix=${{ github.event.inputs.name_prefix }}' -var 'create_baseapp=${{ github.event.inputs.create_baseapp }}' -var 'app_repository_url=${{ github.event.inputs.app_repository_url }}' -var 'app_repository_branch=${{ github.event.inputs.app_repository_branch }}' -var 'app_repository_path=${{ github.event.inputs.app_repository_path }}'
        env:
          TF_VAR_repository_url: ${{ github.server_url }}/${{ github.repository }}.git
